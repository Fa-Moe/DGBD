[{"path":"https://fa-moe.github.io/DGBD/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 DGBD authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://fa-moe.github.io/DGBD/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francisco Farell Moedano-Vargas. Author, copyright holder, maintainer. Roberto Alvarez-Martinez. Author, copyright holder.","code":""},{"path":"https://fa-moe.github.io/DGBD/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moedano-Vargas F, Alvarez-Martinez R (2024). DGBD: Discrete Generalized Beta Distribution Modeling Plotting. R package version 0.0.0.9006, https://fa-moe.github.io/DGBD/, https://github.com/Fa-Moe/DGBD.","code":"@Manual{,   title = {DGBD: Discrete Generalized Beta Distribution Modeling and Plotting},   author = {Francisco Farell Moedano-Vargas and Roberto Alvarez-Martinez},   year = {2024},   note = {R package version 0.0.0.9006, https://fa-moe.github.io/DGBD/},   url = {https://github.com/Fa-Moe/DGBD}, }"},{"path":"https://fa-moe.github.io/DGBD/index.html","id":"dgbd-","dir":"","previous_headings":"","what":"Discrete Generalized Beta Distribution Modeling and Plotting","title":"Discrete Generalized Beta Distribution Modeling and Plotting","text":"cite package: Moedano-Vargas F, Alvarez-Martinez R (2024). DGBD: Discrete Generalized Beta Distribution Modeling Plotting. R package version 0.0.0.9006, https://github.com/Fa-Moe/DGBD. obtain BibTeX entry, can run:","code":"library(DGBD) citation(package=\"DGBD\")"},{"path":"https://fa-moe.github.io/DGBD/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Discrete Generalized Beta Distribution Modeling and Plotting","text":"Discrete Generalized Beta Distributions (DGBDs) provide robust alternative modeling Rank-Abundance Distributions. Traditional power-law distributions often offer accuracy within intermediate range struggle capture logarithmic behavior distribution’s tail ends. additional parameters can sometimes enhance power-law models, DGBDs inherently offer superior fit critical tail regions. Beyond applicability Rank-Abundance Distributions, DGBDs effective modeling ordering distributions across wide array biological systems disciplines. versatility makes invaluable tool researchers fields ecology, demography, bibliometrics, . -depth exploration DGBDs, please refer Martínez-Mekler et al. (2009) https://doi.org/10.1371/journal.pone.0004791 DGBDs characterized three parameters: , , b. ‘R’ package facilitates fitting DGBD given set abundance data reporting parameters. utilizes ‘ggplot2’ visualizing model.","code":""},{"path":"https://fa-moe.github.io/DGBD/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Discrete Generalized Beta Distribution Modeling and Plotting","text":"Install development version DGBD like :","code":"devtools::install_github(\"Fa-Moe/DGBD\")"},{"path":"https://fa-moe.github.io/DGBD/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Discrete Generalized Beta Distribution Modeling and Plotting","text":"Quickly analyze data frames phyloseq-class objects.","code":"library(DGBD)  BC_report(df_abundance=DGBD::Billionaires, column = 2, show_stats = F, model_extra = \"S\")"},{"path":"https://fa-moe.github.io/DGBD/index.html","id":"using-custom-data","dir":"","previous_headings":"","what":"Using custom data","title":"Discrete Generalized Beta Distribution Modeling and Plotting","text":"Data .csv files can easily provided analysis. similar method can used .tsv files utils::read.table().","code":"example_path <- system.file(\"extdata\", \"EC_Codon.csv\", package = \"DGBD\") #This is just a string of text with the path of the .csv file example_data <- read.csv(example_path,header=TRUE,row.names=1) #Your file might or might not have headers and row names. BC_report(example_data, column = 1) #> [1] \"The data fit the DGB distribution with parameters:\" #>               A          a         b #> 2.5 %  38795.90 0.10674700 0.2377527 #> 50 %   43297.55 0.08837031 0.2561294 #> 97.5 % 48321.54 0.06999362 0.2745061 #> [1] \"And the fit has a MSE of:\" #> [1] 7336183"},{"path":"https://fa-moe.github.io/DGBD/index.html","id":"extra-examples","dir":"","previous_headings":"","what":"Extra examples","title":"Discrete Generalized Beta Distribution Modeling and Plotting","text":"Generally nls method better fitting values left graph, performing worse right side graph. BC_compare() can used compare methods given data set. goodness fit tends stay get better using nls method extremes approximated better, however, mid low values accumulate error. “spreading ” effect might desirable, case default method used.","code":"BC_report(df_abundance=DGBD::Citation_ISICatalogued, column = 2, show_stats = F,rank_threshold=1) BC_report(df_abundance=DGBD::hmp_wgs, 2, show_stats = F,model_extra=\"R2\",gfx_label_coords=c(50,1)) BC_report(df_abundance=DGBD::Weblinks, column=2, rank_threshold=4, confidence_interval=0.99) #> [1] \"The data fit the DGB distribution with parameters:\" #>                A        a           b #> 0.5 %  708982440 2.184956 -0.03184022 #> 50 %   735762921 2.182266 -0.02914983 #> 99.5 % 763554984 2.179575 -0.02645945 #> [1] \"And the fit has a MSE of:\" #> [1] 4.24174e+13 BC_report(df_abundance=DGBD::MOMv3.3, column=7) #> [1] \"The data fit the DGB distribution with parameters:\" #>               A         a         b #> 2.5 %  1.209095 0.2976284 0.3556487 #> 50 %   1.280005 0.2933839 0.3598932 #> 97.5 % 1.355073 0.2891393 0.3641378 #> [1] \"And the fit has a MSE of:\" #> [1] 0.4211116 BC_compare(EC_Metabolite, column = 2,model_extra=\"S\")[[1]]"},{"path":"https://fa-moe.github.io/DGBD/reference/Author_Citations.html","id":null,"dir":"Reference","previous_headings":"","what":"Author_Citations. — Author_Citations","title":"Author_Citations. — Author_Citations","text":"many times given author referenced ISI hournals 1981 1997. Authors name merged.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Author_Citations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Author_Citations. — Author_Citations","text":"","code":"Author_Citations"},{"path":[]},{"path":"https://fa-moe.github.io/DGBD/reference/Author_Citations.html","id":"author-citations","dir":"Reference","previous_headings":"","what":"Author_Citations","title":"Author_Citations. — Author_Citations","text":"Data frame contains. Name Author name. Citations per article many citations average author get articles. Articles many articles author published. Citations many times published article cited. Rank ranking many total citations author gotten.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Author_Citations.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Author_Citations. — Author_Citations","text":"https://github.com/robertoalvarezm/DataNonPowerLaws","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Author_Citations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Author_Citations. — Author_Citations","text":"\" 'data covers publications ISI catalogued journals January 1981 - June 1997 compiled H. Small D. Pendlebury Institute Scientific Information. file includes several corrections data originally supplied ISI: missing decimal points several entries now provided, data correctly ordered according total number citations (block original data provided ISI correct rank order). Notice also different authors last name first initial erroneously lumped one entry table (example #12 #397 list). Use list caution! ' Quoted : Citations 1120 -Cited Physicists 1981 - June 1997. (n.d.). Retrieved September 11, 2024, https://physics.bu.edu/~redner/projects/citation/physics--person.html\"","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare the linear and the nls methods parameters — BC_compare","title":"Compare the linear and the nls methods parameters — BC_compare","text":"Creates graph illustrates error predictions linear nls models quick comparison. y axis difference predicted value original abundance value. value made absolute 1 added taking logarithm. addition 1 keeps difference 0 0 plot prevents small decimal linear difference becoming large difference plot. x axis rank given error. allows us see distribution model performs better worse.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare the linear and the nls methods parameters — BC_compare","text":"","code":"BC_compare(   df_abundance = NULL,   column = NULL,   BC_plot_list = NULL,   c_gfx_title = \"Linear vs nls model error\",   c_gfx_label = TRUE,   ... )"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare the linear and the nls methods parameters — BC_compare","text":"df_abundance data frame contains abundance data. column Either string name column number column stores abundances data frame. BC_plot_list list contains 2 objects previously generated BC_plot. first one must use linear paramenters second one parameters estimated nls method. c_gfx_title String. Changes title graph. c_gfx_label Logical. Adds label adds model_extra data models. Defaults true. ... passes arguments BC_plot.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare the linear and the nls methods parameters — BC_compare","text":"list includes data frame difference data predicted real values ","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare the linear and the nls methods parameters — BC_compare","text":"","code":"BC_compare(hmp_wgs,2) #> [[1]]  #>  #> [[2]] #>     Rank           Difference   Type #> 1    189  0.00237922236235437 linear #> 2    110    0.949411556116291 linear #> 3    149     0.86398234712333 linear #> 4     75     2.18408717339127 linear #> 5      2     2.89460297490384 linear #> 6     41     2.19496466997654 linear #> 7    167   0.0108279891287933 linear #> 8    180 0.000923791425696591 linear #> 9    173   0.0019576963093507 linear #> 10    76     2.16611705366194 linear #> 11   186  0.00230456344385244 linear #> 12    26     2.24042633703431 linear #> 13   141     0.90661359716548 linear #> 14   128    0.807865010782247 linear #> 15   124     1.11371458883714 linear #> 16   193 0.000913181441660713 linear #> 17    38     2.19972551510579 linear #> 18   106    0.279986604262262 linear #> 19    97     1.53387156900858 linear #> 20    59     2.35685639113118 linear #> 21    16     1.67751963302326 linear #> 22    81     2.03259133277589 linear #> 23    77     2.13207276435628 linear #> 24    84     1.93491746602399 linear #> 25    82     2.00027018836118 linear #> 26   123     1.06638173977602 linear #> 27    25     2.23510348314585 linear #> 28   107    0.621162711664257 linear #> 29   184 7.36077565313027e-05 linear #> 30    14    0.747426834380638 linear #> 31   161   0.0148414099857888 linear #> 32    34     2.25112724292707 linear #> 33   181  0.00273913346970679 linear #> 34    49     2.23975952872878 linear #> 35   132     1.00316763474479 linear #> 36   198 2.89980457732033e-06 linear #> 37   187  0.00328486370299238 linear #> 38   130    0.973581105001947 linear #> 39   196 5.79228548613111e-06 linear #> 40    42     2.18830582794007 linear #> 41   179  0.00545099018346773 linear #> 42   199 6.44201336563099e-08 linear #> 43    61     2.35316500669969 linear #> 44    87     1.86597979765305 linear #> 45   143    0.930511182744889 linear #> 46   100      1.3908490541134 linear #> 47    72     2.21777648514517 linear #> 48    90     1.79217260391615 linear #> 49    52     2.19938361451817 linear #> 50    24     2.24221021036131 linear #> 51    79     2.08774612513055 linear #> 52    20     2.14073452743701 linear #> 53    88     1.82373569102473 linear #> 54    31     2.23300884573938 linear #> 55   127    0.932012104289909 linear #> 56   151    0.866980722150353 linear #> 57   158    0.331542290414277 linear #> 58   104    0.900492102532607 linear #> 59   163   0.0841321150770086 linear #> 60   138    0.873798790379637 linear #> 61    15     1.32999064947342 linear #> 62    74     2.21210475781383 linear #> 63    29     2.23554156291205 linear #> 64   192 0.000994136210388598 linear #> 65   109    0.825865521742383 linear #> 66   183  0.00148076543557551 linear #> 67   136    0.805930360144171 linear #> 68   185  0.00099537248094383 linear #> 69    60     2.33642295304614 linear #> 70    58     2.36950520971076 linear #> 71    13     1.49481951539227 linear #> 72    54     2.19504808207168 linear #> 73    12     1.81964590212396 linear #> 74     5     2.66642191811449 linear #> 75    46     2.11707516690597 linear #> 76    51     2.18780960819302 linear #> 77    33     2.22470611359157 linear #> 78    86     1.89355135405815 linear #> 79    93     1.63483802964025 linear #> 80   101     1.28013499744303 linear #> 81   171   0.0212657386936515 linear #> 82    91     1.73635252724128 linear #> 83   165   0.0204015904309311 linear #> 84    98     1.51005775762708 linear #> 85    83     1.97761196375109 linear #> 86   118    0.885893966103203 linear #> 87    62     2.32661573100612 linear #> 88   200 2.35149757374834e-09 linear #> 89    92     1.70215297444451 linear #> 90    40     2.22544790700085 linear #> 91    80     2.06178649350326 linear #> 92   148     0.89625337315971 linear #> 93    47     2.11009869530908 linear #> 94     7     2.49622282873057 linear #> 95    18      1.9566990363491 linear #> 96   116    0.644019988944981 linear #> 97     4     2.74625447646363 linear #> 98   160    0.181707866234655 linear #> 99    45     2.10426771820799 linear #> 100  177  0.00859622033251265 linear #> 101  134     0.77053267836885 linear #> 102  194 0.000196680856056073 linear #> 103    6     2.58538359420062 linear #> 104    1     3.00968162519557 linear #> 105  121     1.04894870209753 linear #> 106  175   0.0122765799449672 linear #> 107   69     2.25815286815432 linear #> 108  169   0.0375134260761927 linear #> 109  152    0.807539909028018 linear #> 110  122    0.977782233252671 linear #> 111    8     2.39152756741072 linear #> 112   30     2.21173025879121 linear #> 113  170   0.0320338438455879 linear #> 114  159      0.1944273927273 linear #> 115    9     2.31583827420456 linear #> 116   53     2.18974150612081 linear #> 117  147    0.865659463229395 linear #> 118  131     1.03201392242832 linear #> 119   37     2.17638313412293 linear #> 120  146     0.85390674293237 linear #> 121   55     2.16498715359251 linear #> 122   17     1.87474369752079 linear #> 123   27     2.23106613560042 linear #> 124    3      2.8107082732878 linear #> 125   65     2.31116020517882 linear #> 126  150    0.888229621637997 linear #> 127  102     1.13276286793377 linear #> 128   78     2.11644850033982 linear #> 129   85     1.89118457332356 linear #> 130  166   0.0247574078633507 linear #> 131   64     2.31610466285566 linear #> 132   36     2.19795098153589 linear #> 133  105    0.818250949300796 linear #> 134   66     2.30950913009267 linear #> 135  120    0.974476104547573 linear #> 136   73     2.23823193892881 linear #> 137  133    0.804123499582366 linear #> 138   48     2.26222608262564 linear #> 139  172  0.00691710207128438 linear #> 140  157    0.369738382715925 linear #> 141  176   0.0121880339375194 linear #> 142  137    0.849616981112946 linear #> 143   67     2.30288566936029 linear #> 144  139    0.864755205273453 linear #> 145   89     1.84066584645095 linear #> 146   68     2.27280971322678 linear #> 147  140    0.915628636610144 linear #> 148   99     1.46976332359553 linear #> 149  195 0.000129828344746184 linear #> 150  144    0.847032065520797 linear #> 151   21     2.19100556993561 linear #> 152  111    0.703565978331498 linear #> 153   43      2.1519618304242 linear #> 154  188  0.00232733748200731 linear #> 155  103    0.918168405658705 linear #> 156  114    0.871770722413235 linear #> 157   94     1.63524762335772 linear #> 158   22     2.20092666451387 linear #> 159  154    0.828013822830085 linear #> 160  113    0.874059339450932 linear #> 161  115    0.517826798384511 linear #> 162   71     2.23022018985427 linear #> 163   19     2.00900694780921 linear #> 164   35     2.22389837257937 linear #> 165   11     2.00483232711998 linear #> 166   57     2.32114325676132 linear #> 167   28     2.25640357470773 linear #> 168  182  0.00602045557401389 linear #> 169   23     2.23443105989045 linear #> 170  119    0.886516838422705 linear #> 171   95     1.58587688089419 linear #> 172  108    0.651169587108845 linear #> 173  117    0.774260182123692 linear #> 174  164   0.0439738622628611 linear #> 175   32     2.20389651266082 linear #> 176   70     2.23183550882497 linear #> 177   50     2.22829845090485 linear #> 178  142    0.898315928017031 linear #> 179   56     2.30572783320536 linear #> 180  126    0.903929016851906 linear #> 181  156    0.387702819645049 linear #> 182  197 9.91823639410154e-06 linear #> 183  191  0.00140060561810634 linear #> 184  190  0.00190864862546342 linear #> 185   44     2.11595181888786 linear #> 186  178  0.00385598339330419 linear #> 187  168   0.0605517529380411 linear #> 188  112    0.754857886738093 linear #> 189  174  0.00620453734037706 linear #> 190   96      1.5729856243414 linear #> 191   10      2.2266955094406 linear #> 192  155    0.374171565222956 linear #> 193   63       2.320762034363 linear #> 194  125    0.784024479847339 linear #> 195  145    0.831473202310678 linear #> 196  129    0.895014151897596 linear #> 197  162  0.00812388826601409 linear #> 198  135    0.843527052300609 linear #> 199   39     2.18683599351027 linear #> 200  153    0.826521077348413 linear #> 201  189  0.00944843358463624    nls #> 202  110     1.17036196603158    nls #> 203  149    0.569695129502159    nls #> 204   75      1.7540996272301    nls #> 205    2     1.57123640695456    nls #> 206   41     1.89628243558401    nls #> 207  167    0.328261279734276    nls #> 208  180    0.084930593653271    nls #> 209  173    0.200621458034426    nls #> 210   76     1.73806385616075    nls #> 211  186   0.0243465116487306    nls #> 212   26     1.04064160391883    nls #> 213  141     0.53702174042903    nls #> 214  128    0.312410552386097    nls #> 215  124    0.982630085698873    nls #> 216  193  0.00166962736054686    nls #> 217   38     1.89682583757324    nls #> 218  106     1.03592000849621    nls #> 219   97    0.894311778274799    nls #> 220   59     1.76298683260396    nls #> 221   16     1.60700507468777    nls #> 222   81     1.54780565517596    nls #> 223   77      1.6786107356497    nls #> 224   84     1.38253786644098    nls #> 225   82     1.49385575295717    nls #> 226  123    0.934842823528511    nls #> 227   25     0.40334932711478    nls #> 228  107     1.13423482008502    nls #> 229  184   0.0412103365736029    nls #> 230   14     1.68727852378363    nls #> 231  161    0.455293502989696    nls #> 232   34     1.73157387414359    nls #> 233  181   0.0694017314915522    nls #> 234   49     1.61193205152283    nls #> 235  132    0.718117805583941    nls #> 236  198 5.74665045972782e-05    nls #> 237  187     0.01753741603275    nls #> 238  130    0.676099211306604    nls #> 239  196 0.000424127953223853    nls #> 240   42     1.90125475811186    nls #> 241  179    0.102074719783427    nls #> 242  199 1.27018555481103e-05    nls #> 243   61       1.816199649742    nls #> 244   87     1.32560197434981    nls #> 245  143    0.613942396186406    nls #> 246  100    0.623934582541823    nls #> 247   72     1.74994875218767    nls #> 248   90     1.26663319186835    nls #> 249   52     1.64958621606298    nls #> 250   24     1.15098621787762    nls #> 251   79     1.62744644567312    nls #> 252   20     1.60115027059247    nls #> 253   88     1.24016830901235    nls #> 254   31     1.70095199519168    nls #> 255  127    0.640806928477045    nls #> 256  151    0.609208138313771    nls #> 257  158    0.320230972381281    nls #> 258  104    0.886352811198902    nls #> 259  163    0.443133243756782    nls #> 260  138    0.419757188530308    nls #> 261   15     1.62990966373494    nls #> 262   74      1.7975109760649    nls #> 263   29     1.57666149546588    nls #> 264  192  0.00303719461351729    nls #> 265  109     1.13698547303354    nls #> 266  183   0.0489701832982584    nls #> 267  136    0.167252492983646    nls #> 268  185   0.0324449124794495    nls #> 269   60     1.71780056269766    nls #> 270   58     1.77792866679548    nls #> 271   13     1.75439365599037    nls #> 272   54     1.57600012571337    nls #> 273   12     1.76984975860425    nls #> 274    5     1.50878067464374    nls #> 275   46     1.97129428770717    nls #> 276   51     1.72308237158043    nls #> 277   33     1.78911806105009    nls #> 278   86      1.3589280322432    nls #> 279   93    0.878614379413977    nls #> 280  101      0.1810270129566    nls #> 281  171    0.251535921611216    nls #> 282   91     1.13794199893962    nls #> 283  165    0.374746881306939    nls #> 284   98    0.908031055309996    nls #> 285   83     1.47135702297512    nls #> 286  118    0.845725963406144    nls #> 287   62       1.754981644793    nls #> 288  200 8.70115484770952e-07    nls #> 289   92     1.08816604186052    nls #> 290   40     1.83524834155302    nls #> 291   80      1.5921536381894    nls #> 292  148    0.615836178464429    nls #> 293   47     1.96665943396749    nls #> 294    7     1.71475441504564    nls #> 295   18     1.52643963286736    nls #> 296  116     0.70070878769808    nls #> 297    4     1.15383832302009    nls #> 298  160    0.386339067781889    nls #> 299   45     2.00096982055722    nls #> 300  177    0.134406908279556    nls #> 301  134   0.0147335144310611    nls #> 302  194  0.00135778270108384    nls #> 303    6     1.63079302631661    nls #> 304    1     2.23440669761938    nls #> 305  121    0.952110313318212    nls #> 306  175    0.170577767843782    nls #> 307   69     1.76973662425449    nls #> 308  169     0.30068757333784    nls #> 309  152    0.515643363947904    nls #> 310  122    0.834969325646682    nls #> 311    8     1.79320126108174    nls #> 312   30     1.72520838441744    nls #> 313  170    0.277626260874855    nls #> 314  159     0.40283419609401    nls #> 315    9      1.6943781563541    nls #> 316   53     1.64243456073668    nls #> 317  147    0.537708103647513    nls #> 318  131    0.777766139094752    nls #> 319   37     1.93833080363947    nls #> 320  146    0.493268835395036    nls #> 321   55     1.64070560365623    nls #> 322   17     1.62130165269883    nls #> 323   27     1.38123614790722    nls #> 324    3    0.951367332166128    nls #> 325   65     1.80432415057735    nls #> 326  150    0.631756610539653    nls #> 327  102     0.72233493368126    nls #> 328   78     1.67106974485254    nls #> 329   85     1.28337512874022    nls #> 330  166    0.355839050156428    nls #> 331   64     1.78767890031122    nls #> 332   36     1.89309179302257    nls #> 333  105    0.880200603656347    nls #> 334   66     1.83037175775243    nls #> 335  120     0.88440579696078    nls #> 336   73     1.83601395095155    nls #> 337  133    0.167084816245629    nls #> 338   48     1.54700948447883    nls #> 339  172    0.223195036645977    nls #> 340  157    0.309472455405629    nls #> 341  176    0.153367478154782    nls #> 342  137    0.337817985969822    nls #> 343   67     1.84050335524764    nls #> 344  139     0.40433610634156    nls #> 345   89     1.36105773389114    nls #> 346   68     1.78153310749865    nls #> 347  140    0.547003859713824    nls #> 348   99    0.857927735257029    nls #> 349  195 0.000733886001507779    nls #> 350  144    0.437795688123414    nls #> 351   21     1.59027876580859    nls #> 352  111    0.996332309981782    nls #> 353   43     1.95517026354931    nls #> 354  188   0.0135460629895941    nls #> 355  103    0.950726017190173    nls #> 356  114    0.981129527866893    nls #> 357   94      1.0021502314008    nls #> 358   22     1.41905071039324    nls #> 359  154    0.590577385002886    nls #> 360  113     1.01960296308339    nls #> 361  115    0.666392225927333    nls #> 362   71      1.7528089707235    nls #> 363   19     1.37105317053697    nls #> 364   35     1.82558399114547    nls #> 365   11     1.80540416435571    nls #> 366   57     1.48638324205899    nls #> 367   28     1.34383804288316    nls #> 368  182   0.0551362301205003    nls #> 369   23     1.38533728543182    nls #> 370  119    0.809758308010883    nls #> 371   95    0.890019142369283    nls #> 372  108     1.10275797307527    nls #> 373  117    0.769901145542261    nls #> 374  164    0.405720844935943    nls #> 375   32     1.81789557000458    nls #> 376   70     1.72215646776211    nls #> 377   50     1.62021573050359    nls #> 378  142     0.53039259802772    nls #> 379   56     1.27308998003347    nls #> 380  126    0.609136998459646    nls #> 381  156    0.319958449553394    nls #> 382  197 0.000172693039720437    nls #> 383  191  0.00459219381403857    nls #> 384  190  0.00665196163553009    nls #> 385   44     1.99685956732156    nls #> 386  178    0.115320583072509    nls #> 387  168    0.333053361646755    nls #> 388  112    0.981157318210458    nls #> 389  174    0.184485927298502    nls #> 390   96    0.949146145075183    nls #> 391   10     1.60417126688962    nls #> 392  155    0.364540877822613    nls #> 393   63     1.76942741812164    nls #> 394  125    0.379383996542201    nls #> 395  145    0.418318066575531    nls #> 396  129     0.52094826130002    nls #> 397  162    0.426206988529011    nls #> 398  135    0.308867131215564    nls #> 399   39      1.9208902303575    nls #> 400  153    0.570423800122695    nls #>   BC_compare(EC_Metabolite, column = 2,model_extra=\"S\") #> [[1]]  #>  #> [[2]] #>    Rank          Difference   Type #> 1     5    1.82962336337096 linear #> 2     1    3.20752976731169 linear #> 3     2    2.22780177932703 linear #> 4     3    1.98962657772674 linear #> 5     4    1.82505949219322 linear #> 6     6    1.61439410525534 linear #> 7     8    1.37547015221129 linear #> 8     7    1.24444509927854 linear #> 9     9   0.979458452637471 linear #> 10   10   0.838444644743661 linear #> 11   11   0.522042113549011 linear #> 12   12  0.0586553145267344 linear #> 13   14   0.375817330666947 linear #> 14   16     0.2578373211081 linear #> 15   17  0.0926488069493701 linear #> 16   13   0.391592688695308 linear #> 17   18  0.0923397052297354 linear #> 18   15   0.179026045036569 linear #> 19   19   0.213359938557716 linear #> 20   21  0.0991985782111498 linear #> 21   23   0.108985389737966 linear #> 22   25   0.287617393562865 linear #> 23   20   0.294540768392226 linear #> 24   26   0.254647741295611 linear #> 25   27   0.223332463186563 linear #> 26   22   0.176775012533675 linear #> 27   24  0.0416236902814967 linear #> 28   28   0.193587964189082 linear #> 29   29   0.165344647512256 linear #> 30   30   0.138546046046296 linear #> 31   31   0.113148365964396 linear #> 32   32  0.0891204536135761 linear #> 33   33  0.0664442313565885 linear #> 34   34  0.0451156928633385 linear #> 35   35  0.0251466119974123 linear #> 36   36 0.00656721612081442 linear #> 37   37  0.0103186257811148 linear #> 38   38  0.0246938615747147 linear #> 39   39  0.0367532010288062 linear #> 40   40  0.0466811416590437 linear #> 41   41  0.0545546092194529 linear #> 42   42   0.060327231093778 linear #> 43   43  0.0637827415688048 linear #> 44   44  0.0644251324210786 linear #> 45   45  0.0612118817158777 linear #> 46   46  0.0518105962304594 linear #> 47   47  0.0299271860086047 linear #> 48   48  0.0286999388098998 linear #> 49    5    1.08180336820096    nls #> 50    1    1.04471252563348    nls #> 51    2   0.567901945881021    nls #> 52    3    1.92202154711764    nls #> 53    4    1.21387959552565    nls #> 54    6    1.10322746534787    nls #> 55    8    1.25321496100357    nls #> 56    7    1.48178072754219    nls #> 57    9    1.42007805374734    nls #> 58   10     1.3759867216626    nls #> 59   11    1.35797514746327    nls #> 60   12    1.32354306774785    nls #> 61   14    1.21290352361954    nls #> 62   16    1.04902214584219    nls #> 63   17   0.946270817320816    nls #> 64   13    1.28559738567372    nls #> 65   18   0.835543725481879    nls #> 66   15    1.11379009969761    nls #> 67   19   0.713537893666758    nls #> 68   21   0.552204892760915    nls #> 69   23   0.435511223625961    nls #> 70   25   0.387198206316792    nls #> 71   20   0.574812470515829    nls #> 72   26   0.290807351436276    nls #> 73   27   0.191052793121169    nls #> 74   22   0.409145092708445    nls #> 75   24   0.306191688920247    nls #> 76   28  0.0875512871024221    nls #> 77   29   0.019237030259991    nls #> 78   30   0.101371803900409    nls #> 79   31   0.157680039597494    nls #> 80   32   0.197798145608771    nls #> 81   33   0.226968240851046    nls #> 82   34   0.248373696146057    nls #> 83   35   0.264102261077431    nls #> 84   36   0.275602778837023    nls #> 85   37   0.283924224696788    nls #> 86   38   0.289850346825049    nls #> 87   39   0.293979948846913    nls #> 88   40   0.296777035541096    nls #> 89   41    0.29860343833779    nls #> 90   42   0.299740900263043    nls #> 91   43   0.300406677119094    nls #> 92   44   0.300765107573023    nls #> 93   45    0.30093667983974    nls #> 94   46   0.301005568439985    nls #> 95   47    0.30102627840639    nls #> 96   48   0.301029845368509    nls #>"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_many.html","id":null,"dir":"Reference","previous_headings":"","what":"BC_multiple for Many Objects — BC_many","title":"BC_multiple for Many Objects — BC_many","text":"Analyses N objects using BC_multiple sequence.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_many.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BC_multiple for Many Objects — BC_many","text":"","code":"BC_many(   object_names,   column = NULL,   use_paths = FALSE,   is_phyloseq = FALSE,   supress_messages_many = TRUE,   ... )"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_many.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BC_multiple for Many Objects — BC_many","text":"object_names vector containing names objects process. column Optional. list contains vectors indicate columns select processed object. Order must matched object_names. use_paths Optional. Set true object_names vector uses paths instead loaded objects. is_phyloseq Optional. Set true objects analyse phyloseq class. supress_messages_many Whether hide report progress indicates many objects left analyse. Also stops resulting data frame printed. Defaults true. ... Passes arguments BC_multiple","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_many.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BC_multiple for Many Objects — BC_many","text":"data frame contains BC_multiple style information column appended right indicates object analysis belongs.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_many.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BC_multiple for Many Objects — BC_many","text":"","code":"to_analyze <- c(\"Weblinks\",\"Billionaires\",\"MOMv3.3\") columns_to_use <-list(2,2,c(7,8)) BC_many(to_analyze,columns_to_use) #> [1] \"The data fit the DGB distribution with parameters:\" #>                 A        a          b #> 2.5 %  5679091929 2.231916 -0.2157967 #> 50 %   5957676618 2.228844 -0.2127251 #> 97.5 % 6249927124 2.225773 -0.2096534 #> [1] \"And the fit has a MSE of:\" #> [1] 3.212844e+13  #> [1] \"The data fit the DGB distribution with parameters:\" #>               A         a         b #> 2.5 %  187267.4 0.7427259 0.1190017 #> 50 %   194690.9 0.7396223 0.1221052 #> 97.5 % 202408.7 0.7365187 0.1252088 #> [1] \"And the fit has a MSE of:\" #> [1] 48507853  #> [1] \"The data fit the DGB distribution with parameters:\" #>               A         a         b #> 2.5 %  1.209095 0.2976284 0.3556487 #> 50 %   1.280005 0.2933839 0.3598932 #> 97.5 % 1.355073 0.2891393 0.3641378 #> [1] \"And the fit has a MSE of:\" #> [1] 0.4211116  #> [1] \"The data fit the DGB distribution with parameters:\" #>                 A        a         b #> 2.5 %   957164933 2.809923 0.6957746 #> 50 %   1301878386 2.787015 0.7186829 #> 97.5 % 1770736968 2.764107 0.7415911 #> [1] \"And the fit has a MSE of:\" #> [1] 6.772989e+19  #>          otput_BC_plots output_BC_reports SampleID                       #> temp_row list,8         list,3            \"frequency\"     \"Weblinks\"     #> temp_row list,8         list,3            \"finalWorth\"    \"Billionaires\" #> temp_row list,8         list,3            \"Log mass\"      \"MOMv3.3\"      #> temp_row list,8         list,3            \"Combined mass\" \"MOMv3.3\""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Rank Abundance Distribution — BC_model","title":"Predict Rank Abundance Distribution — BC_model","text":"Uses parameters calculated BC_param model DGB distribution (Mansilla et al. (2007) doi:10.1016/j.joi.2007.01.001 ) rank information data frame.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Rank Abundance Distribution — BC_model","text":"","code":"BC_model(df_abundance = NULL, column = NULL, BC_param_object = NULL, ...)"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Rank Abundance Distribution — BC_model","text":"df_abundance data frame contains abundance data. column Either string name column number column stores abundances data frame. BC_param_object Optional. previous object generated BC_param. ... passes arguments BC_param.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Rank Abundance Distribution — BC_model","text":"list following elements: input data frame added processed ranking data, model data confidence interval data, adjusted parameters, confidence interval parameters, linear model, summary model generated function use raw numeric data.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict Rank Abundance Distribution — BC_model","text":"","code":"modelISISCatalogued <- BC_model(Citation_ISICatalogued, column = 2, show_stats = F,rank_threshold=1) head(modelISISCatalogued[[1]]) #>   pre_numerator pre_denominator        lwr predicted_values        upr BC_rank #> 1           486               1 2797814.44       3399435.46 4130424.55       1 #> 2           485               2  617787.55        729817.29  862162.55       2 #> 3           484               3  255231.03        296644.61  344777.93       3 #> 4           483               4  136277.94        156587.12  179922.93       4 #> 5           482               5   83745.06         95381.80  108635.52       5 #> 6           481               6   56247.55         63607.92   71931.45       6 #>   N abundance #> 1 0    368110 #> 2 1     70836 #> 3 2     44127 #> 4 3     32625 #> 5 4     25910 #> 6 5     21627 modelISISCatalogued[2:6] #> [[1]] #>            A            a            b  #> 5.482970e+05 2.218812e+00 2.949379e-01  #>  #> [[2]] #>                    2.5 %       97.5 % #> (Intercept) 3.682324e+05 8.164128e+05 #> log_den     2.260682e+00 2.176941e+00 #> log_num     2.530679e-01 3.368079e-01 #>  #> [[3]] #>  #> Call: #> stats::lm(formula = log_abundance ~ log_den + log_num) #>  #> Coefficients: #> (Intercept)      log_den      log_num   #>     13.2146      -2.2188       0.2949   #>  #>  #> [[4]] #>  #> Call: #> stats::lm(formula = log_abundance ~ log_den + log_num) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -2.33243 -0.18667 -0.06665  0.27185  1.20461  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 13.21457    0.20261   65.22   <2e-16 *** #> log_den     -2.21881    0.02131 -104.12   <2e-16 *** #> log_num      0.29494    0.02131   13.84   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.3417 on 483 degrees of freedom #> Multiple R-squared:  0.9796,\tAdjusted R-squared:  0.9796  #> F-statistic: 1.162e+04 on 2 and 483 DF,  p-value: < 2.2e-16 #>  #>  #> [[5]] #> function (rank)  #> { #>     params[\"A\"] * (max(t_frame[, \"BC_rank\"]) + 1 - rank)^params[\"b\"]/(rank^params[\"a\"]) #> } #> <bytecode: 0x56108a6ec130> #> <environment: 0x5610977c6148> #>"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Plots and Reports for N Columns — BC_multiple","title":"Create Plots and Reports for N Columns — BC_multiple","text":"Basic wrapper BC_plot BC_report intended used large data frames.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Plots and Reports for N Columns — BC_multiple","text":"","code":"BC_multiple(   df_abundance,   column = NULL,   is_phyloseq = FALSE,   supress_messages = TRUE,   report_only = FALSE,   file_output_mode = FALSE,   called_from_many = NULL,   ... )"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Plots and Reports for N Columns — BC_multiple","text":"df_abundance data frame contains abundance data. column Optional. vector contains either column name strings numeric column indices analyzed. default includes columns. is_phyloseq Logical, optional. Use object analysed phyloseq class. supress_messages Logical. Allows skip messages detail many samples processed. Also stops resulting data frame printed. Defaults true. report_only Logical. Use output data frame without BC_plot object, intended reduce size output large analyses. Defaults false. file_output_mode Logical. Whether provide analysis inside R environment (false) packet BC_report results files (true). Recommended analyzing large datasets. called_from_many Automatically handled. object name passed BC_many. ... passes arguments BC_report BC_plot.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_multiple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Plots and Reports for N Columns — BC_multiple","text":"data frame row represents fitted DGBD. first column stores BC_plot objects second column stores BC_reports. object's output stored inside list.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_multiple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Plots and Reports for N Columns — BC_multiple","text":"","code":"BC_multiple(df_abundance=DGBD::MOMv3.3, column = c(7:8)) #> [1] \"The data fit the DGB distribution with parameters:\" #>               A         a         b #> 2.5 %  1.209095 0.2976284 0.3556487 #> 50 %   1.280005 0.2933839 0.3598932 #> 97.5 % 1.355073 0.2891393 0.3641378 #> [1] \"And the fit has a MSE of:\" #> [1] 0.4211116  #> [1] \"The data fit the DGB distribution with parameters:\" #>                 A        a         b #> 2.5 %   957164933 2.809923 0.6957746 #> 50 %   1301878386 2.787015 0.7186829 #> 97.5 % 1770736968 2.764107 0.7415911 #> [1] \"And the fit has a MSE of:\" #> [1] 6.772989e+19   BC_multiple(df_abundance=DGBD::EC_Codon, model_extra=\"S\",confint_col=\"#448666\") #> [1] \"The data fit the DGB distribution with parameters:\" #>               A          a         b #> 2.5 %  38795.90 0.10674700 0.2377527 #> 50 %   43297.55 0.08837031 0.2561294 #> 97.5 % 48321.54 0.06999362 0.2745061 #> [1] \"And the fit has a S of:\" #> [1] 2751.878  #> [1] \"The data fit the DGB distribution with parameters:\" #>               A          a         b #> 2.5 %  39339.10 0.10742169 0.2396552 #> 50 %   44116.71 0.08823508 0.2588418 #> 97.5 % 49474.55 0.06904847 0.2780284 #> [1] \"And the fit has a S of:\" #> [1] 2943.593  #> [1] \"The data fit the DGB distribution with parameters:\" #>               A          a         b #> 2.5 %  37824.42 0.11439903 0.2384066 #> 50 %   42338.36 0.09552735 0.2572783 #> 97.5 % 47390.98 0.07665568 0.2761499 #> [1] \"And the fit has a S of:\" #> [1] 2506.093  #> [1] \"The data fit the DGB distribution with parameters:\" #>               A          a         b #> 2.5 %  40385.50 0.10515760 0.2369724 #> 50 %   45400.46 0.08556398 0.2565661 #> 97.5 % 51038.15 0.06597036 0.2761597 #> [1] \"And the fit has a S of:\" #> [1] 3149.125  #> [1] \"The data fit the DGB distribution with parameters:\" #>               A          a         b #> 2.5 %  39273.02 0.11050308 0.2366541 #> 50 %   44061.07 0.09124632 0.2559108 #> 97.5 % 49432.87 0.07198955 0.2751676 #> [1] \"And the fit has a S of:\" #> [1] 2861.871  #> [1] \"The data fit the DGB distribution with parameters:\" #>               A          a         b #> 2.5 %  37053.83 0.11333804 0.2380903 #> 50 %   41408.58 0.09473788 0.2566904 #> 97.5 % 46275.12 0.07613773 0.2752906 #> [1] \"And the fit has a S of:\" #> [1] 2451.88  #> [1] \"The data fit the DGB distribution with parameters:\" #>               A          a         b #> 2.5 %  42665.39 0.10707920 0.2353912 #> 50 %   48184.87 0.08671463 0.2557557 #> 97.5 % 54418.38 0.06635005 0.2761203 #> [1] \"And the fit has a S of:\" #> [1] 3227.311  #> [1] \"The data fit the DGB distribution with parameters:\" #>               A          a         b #> 2.5 %  42616.25 0.10799593 0.2351342 #> 50 %   48161.88 0.08751829 0.2556118 #> 97.5 % 54429.17 0.06704065 0.2760895 #> [1] \"And the fit has a S of:\" #> [1] 3237.928  #> [1] \"The data fit the DGB distribution with parameters:\" #>               A          a         b #> 2.5 %  39394.11 0.10866729 0.2391849 #> 50 %   44205.66 0.08937744 0.2584748 #> 97.5 % 49604.89 0.07008759 0.2777646 #> [1] \"And the fit has a S of:\" #> [1] 2942.579  #> [1] \"The data fit the DGB distribution with parameters:\" #>               A          a         b #> 2.5 %  39567.27 0.10743812 0.2392425 #> 50 %   44214.48 0.08884906 0.2578316 #> 97.5 % 49407.51 0.07025999 0.2764206 #> [1] \"And the fit has a S of:\" #> [1] 2781.882  #> [1] \"The data fit the DGB distribution with parameters:\" #>               A          a         b #> 2.5 %  37431.64 0.11323008 0.2373710 #> 50 %   41853.21 0.09454025 0.2560608 #> 97.5 % 46797.07 0.07585041 0.2747507 #> [1] \"And the fit has a S of:\" #> [1] 2513.627  #> [1] \"The data fit the DGB distribution with parameters:\" #>               A          a         b #> 2.5 %  37083.58 0.11331072 0.2382135 #> 50 %   41399.05 0.09488344 0.2566408 #> 97.5 % 46216.71 0.07645616 0.2750681 #> [1] \"And the fit has a S of:\" #> [1] 2452.293"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the DGB Distribution Parameters — BC_param","title":"Estimate the DGB Distribution Parameters — BC_param","text":"Estimates parameters DGB distribution (also known Beta-Cocho distribution) first defined Mansilla et al. (2007) doi:10.1016/j.joi.2007.01.001  characterized Martinez-Mekler et al. (2009) doi:10.1371/journal.pone.0004791  given set data. BC_param calculates log data estimates abundance ranking using linear model. coefficients linear model scaled future use.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the DGB Distribution Parameters — BC_param","text":"","code":"BC_param(   df_abundance = NULL,   column = NULL,   confidence_interval = 0.95,   nls = FALSE,   nls_loop = 1,   nls_algo = \"lm\",   nls_control = list(scale = \"more\"),   BC_rank_object = NULL,   ... )"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the DGB Distribution Parameters — BC_param","text":"df_abundance data frame contains abundance data. column Either string name column number column stores abundances data frame. confidence_interval Numeric. confidence interval calculate DGB distribution. nls Logical. Set TRUE use non-linear least squares fitting method 'gslnls' package. nls_loop Numeric. Set values higher 1 repeat nls method many times needed, reseeding last value. improves fit diminishing returns. nls_algo String. algorithm use gsl_nls function. nls_control List. Provided control argument gsl_nls function. BC_rank_object Optional. previous object generated BC_rank. ... passes arguments BC_rank.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the DGB Distribution Parameters — BC_param","text":"list following elements: input data frame added processed ranking data predicted confidence interval values, adjusted parameters, confidence interval parameters, linear model summary model.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_param.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the DGB Distribution Parameters — BC_param","text":"","code":"paramBillionaires <- BC_param(df_abundance=DGBD::Billionaires, column= 2, confidence_interval=0.99) head(paramBillionaires[[1]]) #>   pre_numerator pre_denominator      lwr      upr BC_rank rank abundance #> 1          2640               1 496524.8 522807.6       1    1    211000 #> 2          2639               2 298181.3 312223.3       2    2    180000 #> 3          2638               3 221270.4 230940.5       3    3    114000 #> 4          2637               4 179058.0 186455.2       4    4    107000 #> 5          2636               5 151943.5 157940.0       5    5    106000 #> 6          2635               6 132865.4 137909.4       6    6    104000 paramBillionaires[2:5] #> [[1]] #>            A            a            b  #> 1.946909e+05 7.396223e-01 1.221052e-01  #>  #> [[2]] #>                    0.5 %       99.5 % #> (Intercept) 1.849913e+05 2.048991e+05 #> log_den     7.437022e-01 7.355424e-01 #> log_num     1.180254e-01 1.261851e-01 #>  #> [[3]] #>  #> Call: #> stats::lm(formula = log_abundance ~ log_den + log_num) #>  #> Coefficients: #> (Intercept)      log_den      log_num   #>     12.1792      -0.7396       0.1221   #>  #>  #> [[4]] #>  #> Call: #> stats::lm(formula = log_abundance ~ log_den + log_num) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.88157 -0.03868  0.00415  0.03921  0.55573  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 12.179169   0.019826  614.31   <2e-16 *** #> log_den     -0.739622   0.001583 -467.30   <2e-16 *** #> log_num      0.122105   0.001583   77.15   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.06127 on 2637 degrees of freedom #> Multiple R-squared:  0.9944,\tAdjusted R-squared:  0.9944  #> F-statistic: 2.355e+05 on 2 and 2637 DF,  p-value: < 2.2e-16 #>  #>   paramMOMv3.3 <- BC_param(df_abundance=DGBD::MOMv3.3, column=7, nls=TRUE) head(paramMOMv3.3[[1]]) #>   pre_numerator pre_denominator      lwr      upr BC_rank Continent Status #> 1          3961             399 4.506527 4.531698     399        AF extant #> 2          3921             439 4.414756 4.439505     439        AF extant #> 3          4105             255 4.918282 4.946076     255        AF extant #> 4          3819             541 4.207317 4.231185     541        AF extant #> 5          3890             470 4.348100 4.372560     470        AF extant #> 6          3854             506 4.274844 4.298994     506        AF extant #>          Order  Family      Genus       Species abundance Combined mass #> 1 Artiodactyla Bovidae      Addax nasomaculatus      4.85       70000.3 #> 2 Artiodactyla Bovidae  Aepyceros      melampus      4.72       52500.1 #> 3 Artiodactyla Bovidae Alcelaphus    buselaphus      5.23      171001.5 #> 4 Artiodactyla Bovidae Ammodorcas       clarkei      4.45       28049.8 #> 5 Artiodactyla Bovidae Ammotragus        lervia      4.68       48000.0 #> 6 Artiodactyla Bovidae Antidorcas   marsupialis      4.59       39049.9 #>   Reference #> 1        60 #> 2    63, 70 #> 3    63, 70 #> 4        60 #> 5        75 #> 6        60 paramMOMv3.3[2:5] #> [[1]] #>          A          a          b  #> 0.02024824 0.13548540 0.75075212  #>  #> [[2]] #>       2.5 %     97.5 % #> A 0.0185832 0.02191329 #> a 0.1332815 0.13768931 #> b 0.7418200 0.75968426 #>  #> [[3]] #> Nonlinear regression model #>   model: abundance ~ A * ((max(BC_rank) + 1 - BC_rank)^b)/(BC_rank^a) #>    data: ranked_frame #>       A       a       b  #> 0.02025 0.13549 0.75075  #>  residual sum-of-squares: 218.3 #>  #> Algorithm: multifit/levenberg-marquardt, (scaling: more, solver: qr) #>  #> Number of iterations to convergence: 33  #> Achieved convergence tolerance: 0 #>  #> [[4]] #>  #> Formula: abundance ~ A * ((max(BC_rank) + 1 - BC_rank)^b)/(BC_rank^a) #>  #> Parameters: #>    Estimate Std. Error t value Pr(>|t|)     #> A 0.0202482  0.0008493   23.84   <2e-16 *** #> a 0.1354854  0.0011242  120.52   <2e-16 *** #> b 0.7507521  0.0045560  164.78   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.2239 on 4356 degrees of freedom #>  #> Number of iterations to convergence: 33  #> Achieved convergence tolerance: 0 #>  #>"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot DGB Distribution and Observed Data — BC_plot","title":"Plot DGB Distribution and Observed Data — BC_plot","text":"Creates graphical representation DGB Distribution (Mansilla et al. (2007) doi:10.1016/j.joi.2007.01.001 ) model. supports linear nls fits done BC_param. Requires function generated BC_model.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot DGB Distribution and Observed Data — BC_plot","text":"","code":"BC_plot(   df_abundance = NULL,   column = NULL,   BC_model_object = NULL,   obs = TRUE,   obs_shape = 16,   obs_col = \"#78a7ff\",   obs_size = 1,   model = TRUE,   model_col = \"#000000\",   model_width = 0.5,   model_extra = \"MSE\",   confint = TRUE,   confint_col = \"#ed8666\",   confint_width = 1,   confrange = TRUE,   confrange_col = \"#ffd078\",   gfx_alpha = 0.75,   gfx_title = \"Rank-Abundance Diagram\",   gfx_label = TRUE,   gfx_label_coords = NULL,   gfx_xy_trans = c(\"identity\", \"log10\"),   gfx_theme = ggplot2::theme_gray(),   plot_silent = FALSE,   ... )"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot DGB Distribution and Observed Data — BC_plot","text":"df_abundance data frame contains abundance data. column Either string name column number column stores abundances data frame. BC_model_object Optional. previous object generated BC_model. obs Logical. Whether plot observed abundance data. Defaults true. obs_shape Numerical. shape plotted observed abundance data. obs_col color observations. obs_size Numeric. size observations. model Logical. Whether show models predicted data. Defaults true. model_col Specify color model. model_width Numeric. Changes width lines use model. model_extra String. one : \"MSE\" (Mean Square Error),\"S\" (Standard error Estimate),\"R2\". Defaults \"MSE\". confint Logical. Whether add confidence interval lines. Defaults true. confint_col Specify color confidence interval lines. confint_width Numeric. Changes width confidence interval lines. confrange Logical. Whether shade area confidence interval. Defaults true. confrange_col Specify color use confidence interval shading. gfx_alpha Numeric. Modifies graphed objects alpha. Default=0.75. gfx_title String. Changes title graph. gfx_label Logical. Whether show parameters used model_extra info. gfx_label_coords vector provides custom x y values move label. gfx_xy_trans vector 2 strings define ggplot2 transformations applied x y scales. Defaults c(\"identity\",\"log10\"). gfx_theme Provide ggplot2 theme function use. Defaults theme_gray(). plot_silent Logical. Whether print console output list plot graph. ... passes arguments BC_model.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot DGB Distribution and Observed Data — BC_plot","text":"list following elements: input data frame added processed ranking data, model data confidence interval data, adjusted parameters, confidence interval parameters, linear model, summary model, generated function use raw numeric data ggplot2 object shows DGBD distribution observed data, model_extra vector 2 elements, model_extra name value.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot DGB Distribution and Observed Data — BC_plot","text":"","code":"plotWeblinks <- BC_plot(Weblinks, column=2, rank_threshold=4,confint=FALSE,confrange=FALSE,plot_silent=TRUE) head(plotWeblinks[[1]]) #>   pre_numerator pre_denominator       lwr predicted_values       upr BC_rank #> 1          5306               3  51485548         52114228  52750584       3 #> 2          5308               1 564836866        573002863 581286917       1 #> 3          5307               2 124625256        126250120 127896169       2 #> 4          5305               4  27497261         27816930  28140315       4 #> 5          5304               5  16904524         17093390  17284366       5 #> 6          5303               6  11359769         11482490  11606537       6 #>   degree abundance #> 1      0  35159835 #> 2      1 106649769 #> 3      2  40711748 #> 4      3  22648832 #> 5      4  12617832 #> 6      5   8188854 plotWeblinks[2:8] #> [[1]] #>             A             a             b  #>  7.357629e+08  2.182266e+00 -2.914983e-02  #>  #> [[2]] #>                     2.5 %        97.5 % #> (Intercept)  7.152981e+08  7.568132e+08 #> log_den      2.184312e+00  2.180219e+00 #> log_num     -3.119669e-02 -2.710297e-02 #>  #> [[3]] #>  #> Call: #> stats::lm(formula = log_abundance ~ log_den + log_num) #>  #> Coefficients: #> (Intercept)      log_den      log_num   #>    20.41642     -2.18227     -0.02915   #>  #>  #> [[4]] #>  #> Call: #> stats::lm(formula = log_abundance ~ log_den + log_num) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.68134 -0.03974 -0.00297  0.03298  0.16958  #>  #> Coefficients: #>              Estimate Std. Error  t value Pr(>|t|)     #> (Intercept) 20.416419   0.014389  1418.88   <2e-16 *** #> log_den     -2.182266   0.001044 -2090.10   <2e-16 *** #> log_num     -0.029150   0.001044   -27.92   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.05765 on 5305 degrees of freedom #> Multiple R-squared:  0.9993,\tAdjusted R-squared:  0.9993  #> F-statistic: 3.706e+06 on 2 and 5305 DF,  p-value: < 2.2e-16 #>  #>  #> [[5]] #> function (rank)  #> { #>     params[\"A\"] * (max(t_frame[, \"BC_rank\"]) + 1 - rank)^params[\"b\"]/(rank^params[\"a\"]) #> } #> <bytecode: 0x56108a6ec130> #> <environment: 0x5610912a4b48> #>  #> [[6]]  #>  #> [[7]] #> [1] \"MSE\"              \"42417404085421.2\" #>   plothmp_wgs <- BC_plot(DGBD::hmp_wgs,2,obs=FALSE,plot_silent=TRUE) head(plothmp_wgs[[1]]) #>   pre_numerator pre_denominator          lwr predicted_values          upr #> 1            12             189   0.00191929       0.00255945   0.00341313 #> 2            91             110  67.60535356      79.64205011  93.82180274 #> 3            52             149   4.28061625       5.03017084   5.91097571 #> 4           126              75 296.89124035     349.15112822 410.60999372 #> 5           199               2 228.90175484     409.49230806 732.55860566 #> 6           160              41 715.69574563     845.63422804 999.16375359 #>   BC_rank    PID    abundance #> 1     189 M00171 8.052846e-03 #> 2     110 M00175 8.754249e+01 #> 3     149 M00174 1.134126e+01 #> 4      75 M00170 1.973639e+02 #> 5       2 M00178 1.193010e+03 #> 6      41 M00359 6.899719e+02 plothmp_wgs[2:8] #> [[1]] #>             A             a             b  #>  2.018236e-10 -6.208510e-01  5.272359e+00  #>  #> [[2]] #>                     2.5 %        97.5 % #> (Intercept)  4.591541e-11  8.871265e-10 #> log_den     -4.345076e-01 -8.071944e-01 #> log_num      5.086016e+00  5.458703e+00 #>  #> [[3]] #>  #> Call: #> stats::lm(formula = log_abundance ~ log_den + log_num) #>  #> Coefficients: #> (Intercept)      log_den      log_num   #>    -22.3236       0.6209       5.2724   #>  #>  #> [[4]] #>  #> Call: #> stats::lm(formula = log_abundance ~ log_den + log_num) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -10.8372  -0.2644  -0.0805   0.2879   2.0649  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept) -22.32363    0.75078  -29.73  < 2e-16 *** #> log_den       0.62085    0.09449    6.57 4.37e-10 *** #> log_num       5.27236    0.09449   55.80  < 2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.9312 on 197 degrees of freedom #> Multiple R-squared:  0.9618,\tAdjusted R-squared:  0.9614  #> F-statistic:  2480 on 2 and 197 DF,  p-value: < 2.2e-16 #>  #>  #> [[5]] #> function (rank)  #> { #>     params[\"A\"] * (max(t_frame[, \"BC_rank\"]) + 1 - rank)^params[\"b\"]/(rank^params[\"a\"]) #> } #> <bytecode: 0x56108a6ec130> #> <environment: 0x561095162620> #>  #> [[6]]  #>  #> [[7]] #> [1] \"MSE\"              \"24311.9761699429\" #>   plotBillionaires <- BC_plot(Billionaires, column= 2, gfx_xy_trans=c(\"log10\",\"log10\"),plot_silent=TRUE) head(plotBillionaires[[1]]) #>   pre_numerator pre_denominator      lwr predicted_values      upr BC_rank rank #> 1          2640               1 499598.6         509496.8 519591.1       1    1 #> 2          2639               2 299827.5         305121.5 310509.0       2    2 #> 3          2638               3 222405.7         226053.8 229761.6       3    3 #> 4          2637               4 179927.4         182719.2 185554.3       4    4 #> 5          2636               5 152648.8         154912.8 157210.3       5    5 #> 6          2635               6 133459.1         135363.9 137295.9       6    6 #>   abundance #> 1    211000 #> 2    180000 #> 3    114000 #> 4    107000 #> 5    106000 #> 6    104000 plotBillionaires[2:8] #> [[1]] #>            A            a            b  #> 1.946909e+05 7.396223e-01 1.221052e-01  #>  #> [[2]] #>                    2.5 %       97.5 % #> (Intercept) 1.872674e+05 2.024087e+05 #> log_den     7.427259e-01 7.365187e-01 #> log_num     1.190017e-01 1.252088e-01 #>  #> [[3]] #>  #> Call: #> stats::lm(formula = log_abundance ~ log_den + log_num) #>  #> Coefficients: #> (Intercept)      log_den      log_num   #>     12.1792      -0.7396       0.1221   #>  #>  #> [[4]] #>  #> Call: #> stats::lm(formula = log_abundance ~ log_den + log_num) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.88157 -0.03868  0.00415  0.03921  0.55573  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 12.179169   0.019826  614.31   <2e-16 *** #> log_den     -0.739622   0.001583 -467.30   <2e-16 *** #> log_num      0.122105   0.001583   77.15   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.06127 on 2637 degrees of freedom #> Multiple R-squared:  0.9944,\tAdjusted R-squared:  0.9944  #> F-statistic: 2.355e+05 on 2 and 2637 DF,  p-value: < 2.2e-16 #>  #>  #> [[5]] #> function (rank)  #> { #>     params[\"A\"] * (max(t_frame[, \"BC_rank\"]) + 1 - rank)^params[\"b\"]/(rank^params[\"a\"]) #> } #> <bytecode: 0x56108a6ec130> #> <environment: 0x561097bc74a0> #>  #> [[6]]  #>  #> [[7]] #> [1] \"MSE\"              \"48507852.7641689\" #>"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random points on a DGB Distribution. — BC_random","title":"Generate random points on a DGB Distribution. — BC_random","text":"Receives set parameters generates set \"x\" ranking points uniformly random linear space calculates expected \"y\" abundance values. Function derived : Fontanelli, O., Miramontes, P., Mansilla, R., Cocho, G., & Li, W. (2022). Beta rank function: smooth double-Pareto-like distribution. Communications Statistics - Theory Methods, 51(11), 3645–3668. https://doi.org/10.1080/03610926.2020.1800739","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random points on a DGB Distribution. — BC_random","text":"","code":"BC_random(parameters)"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random points on a DGB Distribution. — BC_random","text":"parameters numeric vector (,,b,max,n).","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random points on a DGB Distribution. — BC_random","text":"data frame x,y values","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate random points on a DGB Distribution. — BC_random","text":"","code":"BC_random(c(25,0.3,0.1,50,4)) #>        randomx  randomy #> [1,]  4.037507 24.11828 #> [2,] 41.716652 10.08481 #> [3,] 30.038044 12.15231 #> [4,]  7.860422 19.57831  plot(BC_random(c(25,0.3,0.1,50,100)))"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank the Abundance from a File or Data Frame — BC_rank","title":"Rank the Abundance from a File or Data Frame — BC_rank","text":"Sorts df_abundance dataframe given column argument.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank the Abundance from a File or Data Frame — BC_rank","text":"","code":"BC_rank(df_abundance, column, rank_threshold = 0, is_phyloseq = FALSE, ...)"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank the Abundance from a File or Data Frame — BC_rank","text":"df_abundance data frame use. string contains path can used load files. column Can either string containing name column int index rank_threshold Optional. Integer. Discards rows column value equal lower . Defaults 0. is_phyloseq Logical, optional. Use object analysed phyloseq class. ... passes arguments read.table.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank the Abundance from a File or Data Frame — BC_rank","text":"input data frame column appended left stores generated ranking. column used ranking renamed \"abundance\".","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_rank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rank the Abundance from a File or Data Frame — BC_rank","text":"","code":"rankedWeblinks <- BC_rank(df_abundance=DGBD::Weblinks, column=2, rank_threshold=4) head(rankedWeblinks) #>   BC_rank degree abundance #> 1       3      0  35159835 #> 2       1      1 106649769 #> 3       2      2  40711748 #> 4       4      3  22648832 #> 5       5      4  12617832 #> 6       6      5   8188854  rankedTara <- BC_rank(Tara_Data,3,is_phyloseq=TRUE) head(rankedTara) #>         BC_rank MGYA00133816 MGYA00133817 abundance #> 941278      195            7           11         8 #> 769551      138            1           15        14 #> 4165717     620            1            0         1 #> 1111505     179            1           17         9 #> 1111241      80            7            5        28 #> 576629       43            1           33        52"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the Modeled DGB Distribution — BC_report","title":"Summarize the Modeled DGB Distribution — BC_report","text":"Summarize Modeled DGB Distribution","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the Modeled DGB Distribution — BC_report","text":"","code":"BC_report(   df_abundance = NULL,   column = NULL,   BC_plot_object = NULL,   show_plot = TRUE,   show_stats = TRUE,   ... )"},{"path":"https://fa-moe.github.io/DGBD/reference/BC_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the Modeled DGB Distribution — BC_report","text":"df_abundance data frame contains abundance data. column Either string name column number column stores abundances data frame. BC_plot_object previous object generated BC_plot. show_plot Logical. Whether plot DGB distribution. Defaults true. show_stats Logical. Whether print parameters DGB distribution model_extra console. Defaults true. ... passes arguments BC_plot.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the Modeled DGB Distribution — BC_report","text":"list following elements: matrix contains parameters used confidence intervals, model_extra vector DGBD plot.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/BC_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize the Modeled DGB Distribution — BC_report","text":"","code":"BC_report(EC_Metabolite,2) #> [1] \"The data fit the DGB distribution with parameters:\" #>                A        a           b #> 2.5 %   2070.538 2.421084 -0.46252036 #> 50 %    5958.219 2.228363 -0.26979975 #> 97.5 % 17145.482 2.035643 -0.07707913 #> [1] \"And the fit has a MSE of:\" #> [1] 55127.8   BC_report(df_abundance=DGBD::MOMv3.3, column=7, show_stats=FALSE)   BC_report(Tara_Data,2,is_phyloseq=TRUE) #> [1] \"The data fit the DGB distribution with parameters:\" #>               A        a            b #> 2.5 %  4327.562 1.288704 -0.024775637 #> 50 %   5419.046 1.267957 -0.004028272 #> 97.5 % 6785.821 1.247210  0.016719093 #> [1] \"And the fit has a MSE of:\" #> [1] 27591.81   EC_codon_dir <- system.file(\"extdata\", \"EC_Codon.csv\", package = \"DGBD\") EC_codon <- read.csv(EC_codon_dir,header=TRUE,row.names=1) BC_report(EC_codon, column=1) #> [1] \"The data fit the DGB distribution with parameters:\" #>               A          a         b #> 2.5 %  38795.90 0.10674700 0.2377527 #> 50 %   43297.55 0.08837031 0.2561294 #> 97.5 % 48321.54 0.06999362 0.2745061 #> [1] \"And the fit has a MSE of:\" #> [1] 7336183"},{"path":"https://fa-moe.github.io/DGBD/reference/Billionaires.html","id":null,"dir":"Reference","previous_headings":"","what":"Billionaires. — Billionaires","title":"Billionaires. — Billionaires","text":"degree distribution links pages network built 1997 web crawl.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Billionaires.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Billionaires. — Billionaires","text":"","code":"Billionaires"},{"path":[]},{"path":"https://fa-moe.github.io/DGBD/reference/Billionaires.html","id":"billionaires","dir":"Reference","previous_headings":"","what":"Billionaires","title":"Billionaires. — Billionaires","text":"Data frame contains. rank position rank individual. finalWorth aggregate net worth individual.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Billionaires.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Billionaires. — Billionaires","text":"https://github.com/robertoalvarezm/DataNonPowerLaws","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Billionaires.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Billionaires. — Billionaires","text":"\" 'cumulative distribution total wealth richest people United States. Wealth defined aggregate net worth, .e., total value dollars current market prices individual’s holdings, minus debts. ... data Forbes magazine, 6 October 2003.' Quoted : Newman, M. (2005). Power laws, Pareto distributions Zipf’s law. Contemporary Physics, 46(5), 323–351. https://doi.org/10.1080/00107510500052444\"","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Citation_ISICatalogued.html","id":null,"dir":"Reference","previous_headings":"","what":"Citation_ISICatalogued. — Citation_ISICatalogued","title":"Citation_ISICatalogued. — Citation_ISICatalogued","text":"Distribution many times paper cited, taken ISI journals.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Citation_ISICatalogued.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Citation_ISICatalogued. — Citation_ISICatalogued","text":"","code":"Citation_ISICatalogued"},{"path":[]},{"path":"https://fa-moe.github.io/DGBD/reference/Citation_ISICatalogued.html","id":"citation-isicatalogued","dir":"Reference","previous_headings":"","what":"Citation_ISICatalogued","title":"Citation_ISICatalogued. — Citation_ISICatalogued","text":"Data frame contains. N given number citations: Number..papers..N.citations many articles .","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Citation_ISICatalogued.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Citation_ISICatalogued. — Citation_ISICatalogued","text":"https://github.com/robertoalvarezm/DataNonPowerLaws","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Citation_ISICatalogued.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Citation_ISICatalogued. — Citation_ISICatalogued","text":"\" 'distribution covers publications ISI catalogued journals published 1981 cited period January 1981 - June 1997. information compiled H. Small D. Pendlebury Institute Scientific Information.' Quoted : ISI Citation Data. (n.d.). Retrieved September 11, 2024, https://physics.bu.edu/~redner/projects/citation/isi.html  \"","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/EC_Codon.html","id":null,"dir":"Reference","previous_headings":"","what":"EC_Codon. — EC_Codon","title":"EC_Codon. — EC_Codon","text":"codon frequency dozen different strains Escherichia coli.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/EC_Codon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EC_Codon. — EC_Codon","text":"","code":"EC_Codon"},{"path":[]},{"path":"https://fa-moe.github.io/DGBD/reference/EC_Codon.html","id":"ec-codon","dir":"Reference","previous_headings":"","what":"EC_Codon","title":"EC_Codon. — EC_Codon","text":"Data frame contains. NC_008253 Codon freq NC_008253 strain. NC_008563 Codon freq NC_008563 strain. NC_010468 Codon freq NC_010468 strain. NC_004431 Codon freq NC_004431 strain. NC_009801 Codon freq NC_009801 strain. NC_009800 Codon freq NC_009800 strain. NC_002655 Codon freq NC_002655 strain. NC_002695 Codon freq NC_002695 strain. NC_010498 Codon freq NC_010498 strain. NC_007946 Codon freq NC_007946 strain. NC_010473 Codon freq NC_010473 strain. NC_000913 Codon freq NC_000913 strain.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/EC_Codon.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"EC_Codon. — EC_Codon","text":"https://github.com/robertoalvarezm/DataNonPowerLaws","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/EC_Codon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EC_Codon. — EC_Codon","text":"\"Pending citation\"","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/EC_Metabolite.html","id":null,"dir":"Reference","previous_headings":"","what":"EC_Metabolite. — EC_Metabolite","title":"EC_Metabolite. — EC_Metabolite","text":"degrees metabolites metabolic network bacterium Escherichia coli.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/EC_Metabolite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EC_Metabolite. — EC_Metabolite","text":"","code":"EC_Metabolite"},{"path":[]},{"path":"https://fa-moe.github.io/DGBD/reference/EC_Metabolite.html","id":"ec-metabolite","dir":"Reference","previous_headings":"","what":"EC_Metabolite","title":"EC_Metabolite. — EC_Metabolite","text":"Data frame contains. degree number connections metabolite network. count many metabolites number connections (degree distribution network).","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/EC_Metabolite.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"EC_Metabolite. — EC_Metabolite","text":"https://github.com/robertoalvarezm/DataNonPowerLaws","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/EC_Metabolite.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EC_Metabolite. — EC_Metabolite","text":"\" Mirrored https://aaronclauset.github.io/powerlaws/data.htm\"","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Flares.html","id":null,"dir":"Reference","previous_headings":"","what":"Flares. — Flares","title":"Flares. — Flares","text":"Peak gamma-ray intensity solar flares.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Flares.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flares. — Flares","text":"","code":"Flares"},{"path":[]},{"path":"https://fa-moe.github.io/DGBD/reference/Flares.html","id":"flares","dir":"Reference","previous_headings":"","what":"Flares","title":"Flares. — Flares","text":"Data frame contains. intensity number links pointing page","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Flares.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Flares. — Flares","text":"https://github.com/robertoalvarezm/DataNonPowerLaws","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Flares.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flares. — Flares","text":"\" 'cumulative distribution peak gamma-ray intensity solar flares. observations made 1980 1989 instrument known Hard X-Ray Burst Spectrometer aboard Solar Maximum Mission satellite launched 1980. spectrometer used CsI scintillation detector measure gamma-rays solar flare... data NASA Goddard Space Flight Center, umbra.nascom.nasa.gov/smm/hxrbs.html.' Quoted : Newman, M. (2005). Power laws, Pareto distributions Zipf’s law. Contemporary Physics, 46(5), 323–351. https://doi.org/10.1080/00107510500052444\"","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/MOMv3.3.html","id":null,"dir":"Reference","previous_headings":"","what":"MOMv3.3. — MOMv3.3","title":"MOMv3.3. — MOMv3.3","text":"Average body mass late quaternary mammals.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/MOMv3.3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MOMv3.3. — MOMv3.3","text":"","code":"MOMv3.3"},{"path":[]},{"path":"https://fa-moe.github.io/DGBD/reference/MOMv3.3.html","id":"momv-","dir":"Reference","previous_headings":"","what":"MOMv3.3","title":"MOMv3.3. — MOMv3.3","text":"Data frame contains. Continent Continent species resides . species resides one continent, continent specific body mass reported available. Thus, mammals multiple entries. division North South America occurs isthmus Panama. Status Whether species currently present wild (extant); extinct late Pleistocene (extinct), extinct within last 300 years (historical); introduction (introduction); Note necessarily follow CITES IUCN categories. Order Taxonomic order species Family Taxonomic family species Genus Taxonomic genus species Species Species epithet Log mass Log10 transformation Combined Mass Combined mass Adult body mass averaged across males females geographic locations. Reference Reference source body mass information /status species; updated electronic version Wilson Reeder (1993). (6 June 2002; www.nmnh.si.edu/msw) serves status reference extant species.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/MOMv3.3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"MOMv3.3. — MOMv3.3","text":"https://github.com/robertoalvarezm/DataNonPowerLaws","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/MOMv3.3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MOMv3.3. — MOMv3.3","text":"\" -999 missing value code. 'purpose data set compile body mass information mammals Earth investigate patterns body mass seen across geographic taxonomic space evolutionary time.' Quoted : Smith, F. ., Lyons, S. K., Ernest, S. K. M., Jones, K. E., Kaufman, D. M., Dayan, T., Marquet, P. ., Brown, J. H., & Haskell, J. P. (2003). Body Mass Late Quaternary Mammals. Ecology, 84(12), 3403–3403. https://doi.org/10.1890/02-9003 Metadata available: Ecological Archives E084-093-metadata. (n.d.). Retrieved September 11, 2024, https://esapubs.org/archive/ecol/E084/094/metadata.htm\"","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Phy_Citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Phy_Citation. — Phy_Citation","title":"Phy_Citation. — Phy_Citation","text":"degree distribution links pages network built 1997 web crawl.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Phy_Citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phy_Citation. — Phy_Citation","text":"","code":"Phy_Citation"},{"path":[]},{"path":"https://fa-moe.github.io/DGBD/reference/Phy_Citation.html","id":"phy-citation","dir":"Reference","previous_headings":"","what":"Phy_Citation","title":"Phy_Citation. — Phy_Citation","text":"Data frame contains. Volume Physical Review D Volume page number Physical Review D page number referenced. Number citations many articles cited given page","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Phy_Citation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Phy_Citation. — Phy_Citation","text":"https://github.com/robertoalvarezm/DataNonPowerLaws","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Phy_Citation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Phy_Citation. — Phy_Citation","text":"\" 'data covers citations SPIRES High-Energy Physics Database SLAC June 1997 compiled Dr. H. Galic. ... total number articles list 24,296. Warning Disclaimer (May 19, 1998) just discovered inaccurary data stems authors giving incorrect page numbers citations. leads, example, citations 524 separate articles volume 13 , fact, 426 articles volume! gives idea number articles following list actually non-existent. SPIRES informed disparity. Use data caution!' Quoted : Physical Review D Citation Data 1975-1994. (n.d.). Retrieved September 11, 2024, https://physics.bu.edu/~redner/projects/citation/prd.html corrected 2003 data available moment.\"","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Quakes.html","id":null,"dir":"Reference","previous_headings":"","what":"Quakes. — Quakes","title":"Quakes. — Quakes","text":"distribution earthquake magnitudes California 1910 1992.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Quakes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quakes. — Quakes","text":"","code":"Quakes"},{"path":[]},{"path":"https://fa-moe.github.io/DGBD/reference/Quakes.html","id":"quakes","dir":"Reference","previous_headings":"","what":"Quakes","title":"Quakes. — Quakes","text":"Data frame contains. magnitude magnitude earthquake","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Quakes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Quakes. — Quakes","text":"https://github.com/robertoalvarezm/DataNonPowerLaws","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Quakes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quakes. — Quakes","text":"\" 'Magnitude earthquakes: cumulative distribution Richter (local) magnitude earthquakes occurring California January 1910 May 1992, recorded Berkeley Earthquake Catalog. Richter magnitude defined logarithm, base 10, maximum amplitude motion detected earthquake. ... data National Geophysical Data Center, www.ngdc.noaa.gov.' Quoted : Newman, M. (2005). Power laws, Pareto distributions Zipf’s law. Contemporary Physics, 46(5), 323–351. https://doi.org/10.1080/00107510500052444\"","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Tara_Data.html","id":null,"dir":"Reference","previous_headings":"","what":"Tara Oceans data — Tara_Data","title":"Tara Oceans data — Tara_Data","text":"subset (3 samples) data Shotgun Sequencing Tara Oceans DNA samples corresponding size fractions small DNA viruses.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Tara_Data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tara Oceans data — Tara_Data","text":"","code":"Tara_Data"},{"path":[]},{"path":"https://fa-moe.github.io/DGBD/reference/Tara_Data.html","id":"tara-data","dir":"Reference","previous_headings":"","what":"Tara_Data","title":"Tara Oceans data — Tara_Data","text":"Phyloseq-class object 3 samples. otu_table() 1701 taxa 3 samples sample_data() 3 samples 61 sample variables tax_table() 1701 taxa 7 taxonomic ranks","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Tara_Data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Tara Oceans data — Tara_Data","text":"https://www.ebi.ac.uk/metagenomics/analyses/MGYA00133816, https://www.ebi.ac.uk/metagenomics/analyses/MGYA00133817, https://www.ebi.ac.uk/metagenomics/analyses/MGYA00133818","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Tara_Data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tara Oceans data — Tara_Data","text":"\"Tara Expeditions global scientific voyages probe morphological molecular diversity, evolution ecology marine plankton explore impacted changes Earth's climate. first expeditions collected samples marine plankton containing viruses, bacteria, archaea, protists planktonic metazoans living photic layer world's oceans. expeditions, took place 2009 2013, include Tara Oceans: global view, Tara Oceans Polar Circle, followed sampling protocol\". https://www.ebi.ac.uk/services/tara-oceans-data","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Weblinks.html","id":null,"dir":"Reference","previous_headings":"","what":"Weblinks. — Weblinks","title":"Weblinks. — Weblinks","text":"degree distribution links pages network built 1997 web crawl.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Weblinks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weblinks. — Weblinks","text":"","code":"Weblinks"},{"path":[]},{"path":"https://fa-moe.github.io/DGBD/reference/Weblinks.html","id":"weblinks","dir":"Reference","previous_headings":"","what":"Weblinks","title":"Weblinks. — Weblinks","text":"Data frame contains. degree number links pointing page. frequency number pages given degree. degree distribution network.","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Weblinks.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Weblinks. — Weblinks","text":"https://github.com/robertoalvarezm/DataNonPowerLaws","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/Weblinks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weblinks. — Weblinks","text":"\" dataset contains 'Two AltaVista crawls 200 million pages 1.5 billion links.' Broder, ., R. Kumar, F. Maghoul, P. Raghavan, S. Rajagopalan, R. Stata, . Tomkins, J. Wiener, 2000, Computer Networks 33, 309. \"","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/hmp_wgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Human Microbiome Project WGS . — hmp_wgs","title":"Human Microbiome Project WGS . — hmp_wgs","text":"Whole Genome Sequencing data obtained Human Microbiome Project production phase .","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/hmp_wgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Human Microbiome Project WGS . — hmp_wgs","text":"","code":"hmp_wgs"},{"path":[]},{"path":"https://fa-moe.github.io/DGBD/reference/hmp_wgs.html","id":"hmp-wgs","dir":"Reference","previous_headings":"","what":"hmp_wgs","title":"Human Microbiome Project WGS . — hmp_wgs","text":"Data frame contains. PID Module Table ID identifies organisms contain complete KEGG modules Abundance Abundance data","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/hmp_wgs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Human Microbiome Project WGS . — hmp_wgs","text":"https://portal.hmpdacc.org/files/1670203039de370df9a35a043735e964","code":""},{"path":"https://fa-moe.github.io/DGBD/reference/hmp_wgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Human Microbiome Project WGS . — hmp_wgs","text":"\"overall mission HMP generate resources facilitate characterization human microbiota understanding microbiome impacts human health disease. currently second phase HMP. phase, iHMP create integrated longitudinal datasets microbiome host three different cohort studies microbiome-associated conditions using multiple ‘omics technologies. study groups engaged providing new computational tools integrative molecular perspectives microbial activity dysbiosis. result creating multi’omic data resources, iHMP opened new opportunities data integration human microbiome.\". https://www.hmpdacc.org/ihmp/","code":""},{"path":"https://fa-moe.github.io/DGBD/news/index.html","id":"dgbd-0009006","dir":"Changelog","previous_headings":"","what":"DGBD 0.0.0.9006","title":"DGBD 0.0.0.9006","text":"*Breaking changes: ‘column_functionname’ arguments renamed ‘column’ ease writing code.","code":""},{"path":"https://fa-moe.github.io/DGBD/news/index.html","id":"dgbd-0009000","dir":"Changelog","previous_headings":"","what":"DGBD 0.0.0.9000","title":"DGBD 0.0.0.9000","text":"Added arguments BC_plot() Created package vignette #* Initial CRAN submission.","code":""}]
